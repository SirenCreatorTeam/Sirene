buildscript
{
    ext.kotlin_version = '1.3.11'
    
    repositories
    {
        mavenLocal()
        mavenCentral()
    }
    
    dependencies
    {
        classpath group: 'de.dynamicfiles.projects.gradle.plugins', name: 'javafx-gradle-plugin', version: '8.8.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id "org.jetbrains.kotlin.jvm" version "1.3.11"
    id 'com.gradle.build-scan' version '1.16'
}

buildScan {
    licenseAgreementUrl = 'https://gradle.com/terms-of-service'
    licenseAgree = 'yes'
}

apply plugin: 'kotlin'
apply plugin: 'application'

sourceCompatibility = 1.8
targetCompatibility = 1.8
version = '1.15.0-Diene'

repositories
{
    mavenLocal()
    mavenCentral()
    jcenter()
}

apply plugin: 'javafx-gradle-plugin'

dependencies
{
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.0.1"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    implementation 'org.jyaml:jyaml:1.3'
    implementation files ('lib/RXTXcomm.jar')
    implementation "io.reactivex:rxkotlin:2.0.0-RC1"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.0"
}

sourceSets {
    main.kotlin.srcDirs += 'src/io/github/frodo821/sirene'
    main.kotlin.srcDirs += 'src/io/github/frodo821/sirene/application'
    main.kotlin.srcDirs += 'src/io/github/frodo821/sirene/application/ui'
    main.kotlin.srcDirs += 'src/io/github/frodo821/sirene/configuration'
    main.kotlin.srcDirs += 'src/io/github/frodo821/sirene/midi'
    main.kotlin.srcDirs += 'src/io/github/frodo821/sirene/serial'
    main.resources.includes += "**/*.fxml"
    main.resources.srcDirs += 'src/io/github/frodo821/sirene/application'
}

jfx {
    mainClass = 'io.github.frodo821.sirene.application.AppMain'
    vendor = 'Frodo821'
}

jar {
    manifest {
        attributes "Main-Class": "io.github.frodo821.sirene.MainKt"
    }
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    from configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) }
    from configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
}

mainClassName = "io.github.frodo821.sirene.MainKt"
